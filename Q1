"""
Python program to create a simple shopping system with classes for Product, ShoppingCart, and Customer.
Implement methods to add products to the cart, display the cart contents, and calculate the total cost.
"""

class Product:
    def __init__(self, product_id, name, price):
        self.product_id = product_id
        self.name = name
        self.price = price

    def __str__(self):
        return f"{self.name} - ${self.price:.2f}"

class ShoppingCart:
    def __init__(self):
        self.cart = []

    def add_to_cart(self, product, quantity=1):
        self.cart.append({"product": product, "quantity": quantity})
        print(f"Added {quantity} {product.name}(s) to the cart.")

    def display_cart_contents(self):
        if not self.cart:
            print("The cart is empty.")
        else:
            print("Cart contents:")
            for item in self.cart:
                print(f"{item['quantity']} x {item['product']}")

    def calculate_total_cost(self):
        total_cost = sum(item['quantity'] * item['product'].price for item in self.cart)
        print(f"Total cost of the items in the cart: ${total_cost:.2f}")

class Customer:
    def __init__(self, customer_id, name):
        self.customer_id = customer_id
        self.name = name

    def __str__(self):
        return f"Customer {self.customer_id} - {self.name}"

# Example usage:
if __name__ == "__main__":
    product1 = Product(1, "Laptop", 1200.00)
    product2 = Product(2, "Headphones", 50.00)
    product3 = Product(3, "Mouse", 20.00)

    customer = Customer(101, "Alice")
    shopping_cart = ShoppingCart()

    shopping_cart.add_to_cart(product1, 2)
    shopping_cart.add_to_cart(product2)
    shopping_cart.add_to_cart(product3, 3)

    shopping_cart.display_cart_contents()
    shopping_cart.calculate_total_cost()
